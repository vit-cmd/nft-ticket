type Event @entity {
  id: ID!
  name: String!
  location: String!
  description: String!
  hashImage: String!
  eventManager: Bytes! # address
  startDay: BigInt!
  endDay: BigInt!
  exist: Boolean!
  ticketTypes: [TicketType!]! @derivedFrom(field: "event")
}

type TicketType @entity {
  id: ID!
  eventID: BigInt! # uint256
  name: String! # string
  description: String! # string
  hashImage: String! # string
  currentMintTickets: BigInt! # uint64
  maxTicketCount: BigInt! # uint64
  priceFactor: BigDecimal!
  exist: Boolean!
  event: Event!
  tickets: [Ticket!]! @derivedFrom(field: "ticketType")
}

type Ticket @entity {
  id: ID!
  eventID: BigInt! # uint256
  ticketTypeID: BigInt! # uint256
  ticketType: TicketType!
  owner: Bytes!
  forSale: Boolean!
  price: BigDecimal
  listings: [Listing!]! @derivedFrom(field: "ticket")
  sales: [Sale!]! @derivedFrom(field: "ticket")
  transfers: [Transfer!]! @derivedFrom(field: "ticket")
  cancels: [Cancel!]! @derivedFrom(field: "ticket")
}

type EventManager @entity {
  id: ID!
  approve: Boolean!
}

type Transfer @entity {
  id: ID!
  from: Bytes!
  to: Bytes!
  ticketID: BigInt!
  date: BigInt!
  ticket: Ticket!
}

type Sale @entity {
  id: ID!
  from: Bytes!
  to: Bytes!
  ticketID: BigInt!
  price: BigDecimal!
  date: BigInt!
  ticket: Ticket!
}

type Listing @entity {
  id: ID!
  price: BigDecimal!
  from: Bytes!
  ticketID: BigInt!
  date: BigInt!
  ticket: Ticket!
}

type Cancel @entity {
  id: ID!
  price: BigDecimal!
  from: Bytes!
  ticketID: BigInt!
  date: BigInt!
  ticket: Ticket!
}
