// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewEvent extends ethereum.Event {
  get params(): NewEvent__Params {
    return new NewEvent__Params(this);
  }
}

export class NewEvent__Params {
  _event: NewEvent;

  constructor(event: NewEvent) {
    this._event = event;
  }

  get eventId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get location(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get hashImage(): string {
    return this._event.parameters[4].value.toString();
  }

  get eventManager(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get priceUnit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get startDay(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get endDay(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateAprroveEventManager extends ethereum.Event {
  get params(): UpdateAprroveEventManager__Params {
    return new UpdateAprroveEventManager__Params(this);
  }
}

export class UpdateAprroveEventManager__Params {
  _event: UpdateAprroveEventManager;

  constructor(event: UpdateAprroveEventManager) {
    this._event = event;
  }

  get eventManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get aprrove(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Event extends ethereum.SmartContract {
  static bind(address: Address): Event {
    return new Event("Event", address);
  }

  getApprovedEventManager(address_: Address): boolean {
    let result = super.call(
      "getApprovedEventManager",
      "getApprovedEventManager(address):(bool)",
      [ethereum.Value.fromAddress(address_)]
    );

    return result[0].toBoolean();
  }

  try_getApprovedEventManager(address_: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getApprovedEventManager",
      "getApprovedEventManager(address):(bool)",
      [ethereum.Value.fromAddress(address_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestToBeEventManager(address_: Address): boolean {
    let result = super.call(
      "requestToBeEventManager",
      "requestToBeEventManager(address):(bool)",
      [ethereum.Value.fromAddress(address_)]
    );

    return result[0].toBoolean();
  }

  try_requestToBeEventManager(address_: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "requestToBeEventManager",
      "requestToBeEventManager(address):(bool)",
      [ethereum.Value.fromAddress(address_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ApproveEventManagerCall extends ethereum.Call {
  get inputs(): ApproveEventManagerCall__Inputs {
    return new ApproveEventManagerCall__Inputs(this);
  }

  get outputs(): ApproveEventManagerCall__Outputs {
    return new ApproveEventManagerCall__Outputs(this);
  }
}

export class ApproveEventManagerCall__Inputs {
  _call: ApproveEventManagerCall;

  constructor(call: ApproveEventManagerCall) {
    this._call = call;
  }

  get address_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveEventManagerCall__Outputs {
  _call: ApproveEventManagerCall;

  constructor(call: ApproveEventManagerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateEventCall extends ethereum.Call {
  get inputs(): CreateEventCall__Inputs {
    return new CreateEventCall__Inputs(this);
  }

  get outputs(): CreateEventCall__Outputs {
    return new CreateEventCall__Outputs(this);
  }
}

export class CreateEventCall__Inputs {
  _call: CreateEventCall;

  constructor(call: CreateEventCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get location_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get image_(): string {
    return this._call.inputValues[3].value.toString();
  }

  get priceUnit_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get startDate_(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get endDate_(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateEventCall__Outputs {
  _call: CreateEventCall;

  constructor(call: CreateEventCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestToBeEventManagerCall extends ethereum.Call {
  get inputs(): RequestToBeEventManagerCall__Inputs {
    return new RequestToBeEventManagerCall__Inputs(this);
  }

  get outputs(): RequestToBeEventManagerCall__Outputs {
    return new RequestToBeEventManagerCall__Outputs(this);
  }
}

export class RequestToBeEventManagerCall__Inputs {
  _call: RequestToBeEventManagerCall;

  constructor(call: RequestToBeEventManagerCall) {
    this._call = call;
  }

  get address_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RequestToBeEventManagerCall__Outputs {
  _call: RequestToBeEventManagerCall;

  constructor(call: RequestToBeEventManagerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
